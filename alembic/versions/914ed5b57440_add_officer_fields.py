"""add_officer_fields

Revision ID: 914ed5b57440
Revises: 6f79e0848f71
Create Date: 2025-08-04 12:07:37.562458

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '914ed5b57440'
down_revision: Union[str, Sequence[str], None] = '6f79e0848f71'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('officers', sa.Column('full_name', sa.String(length=100), nullable=True))
    op.add_column('officers', sa.Column('nin_number', sa.String(length=20), nullable=True))
    op.add_column('officers', sa.Column('gender', sa.String(length=10), nullable=True))
    op.add_column('officers', sa.Column('date_of_birth', sa.Date(), nullable=True))
    op.add_column('officers', sa.Column('residential_address', sa.Text(), nullable=True))
    op.add_column('officers', sa.Column('state_of_residence', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('local_government_residence', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('additional_skills', sa.Text(), nullable=True))
    op.add_column('officers', sa.Column('nationality', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('country_of_residence', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('state_of_origin', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('lga_of_origin', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('religion', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('place_of_birth', sa.String(length=100), nullable=True))
    op.add_column('officers', sa.Column('marital_status', sa.String(length=20), nullable=True))
    op.add_column('officers', sa.Column('bank_name', sa.String(length=100), nullable=True))
    op.add_column('officers', sa.Column('account_number', sa.String(length=20), nullable=True))
    op.add_column('officers', sa.Column('category', sa.String(length=50), nullable=True))
    op.add_column('officers', sa.Column('other_name', sa.String(length=100), nullable=True))
    op.add_column('officers', sa.Column('ssce_certificate', sa.String(length=255), nullable=True))
    op.add_column('officers', sa.Column('higher_education_certificate', sa.String(length=255), nullable=True))
    op.add_column('officers', sa.Column('nin_slip', sa.String(length=255), nullable=True))
    op.add_column('officers', sa.Column('do_you_smoke', sa.Boolean(), nullable=True))
    op.alter_column('officers', 'unique_id',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Official identification number for the officer',
               existing_nullable=False)
    op.alter_column('officers', 'email',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Officer email address (must be unique)',
               existing_nullable=False)
    op.alter_column('officers', 'phone',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Primary contact phone number',
               existing_nullable=False)
    op.alter_column('officers', 'password_hash',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Hashed password for authentication',
               existing_nullable=False)
    op.alter_column('officers', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Flag indicating if the officer account is active',
               existing_nullable=True)
    op.alter_column('officers', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp of last successful login',
               existing_nullable=True)
    op.alter_column('officers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp when record was created',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('officers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp when record was last updated',
               existing_nullable=True)
    op.alter_column('officers', 'role',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Role or permission level of the officer',
               existing_nullable=False)
    op.alter_column('officers', 'notes',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Additional notes or comments about the officer',
               existing_nullable=True)
    op.alter_column('officers', 'passport',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Path to officer passport photo',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('officers', 'passport',
               existing_type=sa.VARCHAR(length=255),
               comment='Path to officer passport photo',
               existing_nullable=True)
    op.alter_column('officers', 'notes',
               existing_type=sa.TEXT(),
               comment='Additional notes or comments about the officer',
               existing_nullable=True)
    op.alter_column('officers', 'role',
               existing_type=sa.VARCHAR(length=50),
               comment='Role or permission level of the officer',
               existing_nullable=False)
    op.alter_column('officers', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp when record was last updated',
               existing_nullable=True)
    op.alter_column('officers', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp when record was created',
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('officers', 'last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp of last successful login',
               existing_nullable=True)
    op.alter_column('officers', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='Flag indicating if the officer account is active',
               existing_nullable=True)
    op.alter_column('officers', 'password_hash',
               existing_type=sa.VARCHAR(),
               comment='Hashed password for authentication',
               existing_nullable=False)
    op.alter_column('officers', 'phone',
               existing_type=sa.VARCHAR(),
               comment='Primary contact phone number',
               existing_nullable=False)
    op.alter_column('officers', 'email',
               existing_type=sa.VARCHAR(),
               comment='Officer email address (must be unique)',
               existing_nullable=False)
    op.alter_column('officers', 'unique_id',
               existing_type=sa.VARCHAR(),
               comment='Official identification number for the officer',
               existing_nullable=False)
    op.drop_column('officers', 'do_you_smoke')
    op.drop_column('officers', 'nin_slip')
    op.drop_column('officers', 'higher_education_certificate')
    op.drop_column('officers', 'ssce_certificate')
    op.drop_column('officers', 'other_name')
    op.drop_column('officers', 'category')
    op.drop_column('officers', 'account_number')
    op.drop_column('officers', 'bank_name')
    op.drop_column('officers', 'marital_status')
    op.drop_column('officers', 'place_of_birth')
    op.drop_column('officers', 'religion')
    op.drop_column('officers', 'lga_of_origin')
    op.drop_column('officers', 'state_of_origin')
    op.drop_column('officers', 'country_of_residence')
    op.drop_column('officers', 'nationality')
    op.drop_column('officers', 'additional_skills')
    op.drop_column('officers', 'local_government_residence')
    op.drop_column('officers', 'state_of_residence')
    op.drop_column('officers', 'residential_address')
    op.drop_column('officers', 'date_of_birth')
    op.drop_column('officers', 'gender')
    op.drop_column('officers', 'nin_number')
    op.drop_column('officers', 'full_name')
    # ### end Alembic commands ###
