"""update_models_for_v2_compatibility

Revision ID: 954a001f9cb5
Revises: 151da8f94e2b
Create Date: 2025-08-03 02:40:52.663345

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '954a001f9cb5'
down_revision: Union[str, Sequence[str], None] = '151da8f94e2b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applicants', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('applicants', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('applicants', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('applicants', 'other_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('applicants', 'residential_address',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('applicants', 'higher_education_degree',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('applicants', 'additional_skills',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=True)
    op.alter_column('applicants', 'design_rating',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint('uq_applicants_nin_number', 'applicants', ['nin_number'])
    
    # Officer table changes - fixed section
    op.add_column('officers', sa.Column('last_login', sa.DateTime(timezone=True), nullable=True, comment='Timestamp of last successful login'))
    op.add_column('officers', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True, comment='Timestamp when record was created'))
    op.add_column('officers', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Timestamp when record was last updated'))
    
    # Fix: Add role column as nullable first, then set default values, then make NOT NULL
    op.add_column('officers', sa.Column('role', sa.String(length=50), nullable=True, comment='Role or permission level of the officer'))
    op.execute("UPDATE officers SET role = 'officer' WHERE role IS NULL")
    op.alter_column('officers', 'role', nullable=False)
    
    op.add_column('officers', sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes or comments about the officer'))
    
    # Add explicit constraint names
    op.alter_column('officers', 'id',
               existing_type=sa.UUID(),
               comment='Unique identifier for the officer',
               existing_nullable=False)
    op.alter_column('officers', 'applicant_id',
               existing_type=sa.UUID(),
               comment='Reference to the applicant record this officer is associated with',
               existing_nullable=False)
    op.alter_column('officers', 'unique_id',
               existing_type=sa.VARCHAR(),
               comment='Official identification number for the officer',
               existing_nullable=False)
    op.alter_column('officers', 'email',
               existing_type=sa.VARCHAR(),
               comment='Officer email address (must be unique)',
               existing_nullable=False)
    op.alter_column('officers', 'phone',
               existing_type=sa.VARCHAR(),
               comment='Primary contact phone number',
               existing_nullable=False)
    op.alter_column('officers', 'password_hash',
               existing_type=sa.VARCHAR(),
               comment='Hashed password for authentication',
               existing_nullable=False)
    op.alter_column('officers', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='Flag indicating if the officer account is active',
               existing_nullable=True)
    op.create_unique_constraint('uq_officers_applicant_id', 'officers', ['applicant_id'])
    op.drop_constraint(op.f('officers_applicant_id_fkey'), 'officers', type_='foreignkey')
    op.create_foreign_key('fk_officer_applicant', 'officers', 'applicants', ['applicant_id'], ['id'], ondelete='CASCADE')
    op.create_table_comment(
        'officers',
        'Table storing officer information',
        existing_comment=None,
        schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table_comment(
        'officers',
        existing_comment='Table storing officer information',
        schema=None
    )
    op.drop_constraint('fk_officer_applicant', 'officers', type_='foreignkey')
    op.create_foreign_key(op.f('officers_applicant_id_fkey'), 'officers', 'applicants', ['applicant_id'], ['id'])
    op.drop_constraint('uq_officers_applicant_id', 'officers', type_='unique')
    op.alter_column('officers', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='Flag indicating if the officer account is active',
               existing_nullable=True)
    op.alter_column('officers', 'password_hash',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Hashed password for authentication',
               existing_nullable=False)
    op.alter_column('officers', 'phone',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Primary contact phone number',
               existing_nullable=False)
    op.alter_column('officers', 'email',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Officer email address (must be unique)',
               existing_nullable=False)
    op.alter_column('officers', 'unique_id',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Official identification number for the officer',
               existing_nullable=False)
    op.alter_column('officers', 'applicant_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Reference to the applicant record this officer is associated with',
               existing_nullable=False)
    op.alter_column('officers', 'id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Unique identifier for the officer',
               existing_nullable=False)
    op.drop_column('officers', 'notes')
    op.drop_column('officers', 'role')
    op.drop_column('officers', 'updated_at')
    op.drop_column('officers', 'created_at')
    op.drop_column('officers', 'last_login')
    op.drop_constraint('uq_applicants_nin_number', 'applicants', type_='unique')
    op.alter_column('applicants', 'design_rating',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('applicants', 'additional_skills',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('applicants', 'higher_education_degree',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('applicants', 'residential_address',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('applicants', 'other_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('applicants', 'last_login')
    op.drop_column('applicants', 'updated_at')
    op.drop_column('applicants', 'created_at')
    # ### end Alembic commands ###