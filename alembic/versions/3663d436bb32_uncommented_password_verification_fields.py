"""Uncommented password & verification fields

Revision ID: 3663d436bb32
Revises: f33515eea49c
Create Date: 2025-07-30 00:53:32.840035

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3663d436bb32'
down_revision: Union[str, Sequence[str], None] = 'f33515eea49c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('verification_codes')
    op.add_column('applicants', sa.Column('residential_address', sa.String(), nullable=False))
    op.add_column('applicants', sa.Column('local_government_residence', sa.String(), nullable=False))
    op.add_column('applicants', sa.Column('local_government_origin', sa.String(), nullable=False))
    op.add_column('applicants', sa.Column('ssce_certificate', sa.String(), nullable=False))
    op.add_column('applicants', sa.Column('higher_education_degree', sa.String(), nullable=False))
    op.add_column('applicants', sa.Column('agree_to_return_properties', sa.Boolean(), nullable=False))
    op.add_column('applicants', sa.Column('additional_skills', sa.String(), nullable=False))
    op.alter_column('applicants', 'agree_to_abide_rules',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_column('applicants', 'address')
    op.drop_column('applicants', 'degree_cert')
    op.drop_column('applicants', 'aagree_to_return_properties')
    op.drop_column('applicants', 'ssce_cert')
    op.drop_column('applicants', 'lga_residence')
    op.drop_column('applicants', 'lga_origin')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applicants', sa.Column('lga_origin', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('lga_residence', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('ssce_cert', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('aagree_to_return_properties', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('degree_cert', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('applicants', 'agree_to_abide_rules',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_column('applicants', 'additional_skills')
    op.drop_column('applicants', 'agree_to_return_properties')
    op.drop_column('applicants', 'higher_education_degree')
    op.drop_column('applicants', 'ssce_certificate')
    op.drop_column('applicants', 'local_government_origin')
    op.drop_column('applicants', 'local_government_residence')
    op.drop_column('applicants', 'residential_address')
    op.create_table('verification_codes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=6), autoincrement=False, nullable=False),
    sa.Column('purpose', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('verification_codes_pkey'))
    )
    # ### end Alembic commands ###
