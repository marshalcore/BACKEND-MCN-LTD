"""Admin only

Revision ID: 335ec389b50b
Revises: 02e78ff9ca7a
Create Date: 2025-07-24 13:54:59.434364

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '335ec389b50b'
down_revision: Union[str, Sequence[str], None] = '02e78ff9ca7a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.drop_index(op.f('ix_applicants_id'), table_name='applicants')
    op.drop_table('applicants')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('applicants',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('marital_status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nin_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('bank_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('account_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('surname', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('other_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('mobile_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('gender', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nationality', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('country_of_residence', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state_of_origin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state_of_residence', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('residential_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('local_government_residence', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('local_government_origin', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('religion', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('place_of_birth', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('passport_photo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nin_slip', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ssce_certificate', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('higher_education_degree', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('do_you_smoke', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('agree_to_join', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('agree_to_abide_rules', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('agree_to_return_properties', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('additional_skills', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('design_rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('application_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('applicants_pkey')),
    sa.UniqueConstraint('email', name=op.f('applicants_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_applicants_id'), 'applicants', ['id'], unique=False)
    op.drop_table('admins')
    # ### end Alembic commands ###
