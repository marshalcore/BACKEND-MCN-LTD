"""Fix applicant table model update

Revision ID: 84033dc0cc03
Revises: 2cc761a6fb74
Create Date: 2025-07-25 15:19:13.241227

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '84033dc0cc03'
down_revision: Union[str, Sequence[str], None] = '2cc761a6fb74'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
# ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applicants', sa.Column('residential_address', sa.String(), nullable=True))
    op.add_column('applicants', sa.Column('local_government_residence', sa.String(), nullable=True))
    op.add_column('applicants', sa.Column('local_government_origin', sa.String(), nullable=True))
    op.add_column('applicants', sa.Column('ssce_certificate', sa.String(), nullable=True))
    op.add_column('applicants', sa.Column('higher_education_degree', sa.String(), nullable=True))
    op.add_column('applicants', sa.Column('agree_to_abide_rules', sa.Boolean(), nullable=True))
    op.add_column('applicants', sa.Column('agree_to_return_properties', sa.Boolean(), nullable=True))
    op.add_column('applicants', sa.Column('additional_skills', sa.String(), nullable=True))
    op.execute("""
    ALTER TABLE applicants
    ALTER COLUMN date_of_birth TYPE DATE
    USING date_of_birth::date
    """)

    op.execute("""
    ALTER TABLE applicants
    ALTER COLUMN do_you_smoke TYPE BOOLEAN
    USING CASE
        WHEN lower(do_you_smoke) IN ('yes', 'true', '1') THEN true
        ELSE false
    END
    """)

    op.execute("""
    ALTER TABLE applicants
    ALTER COLUMN design_rating TYPE INTEGER
    USING design_rating::integer
    """)

    op.drop_column('applicants', 'agree_to_return_properties')
    op.drop_column('applicants', 'residential_address')
    op.drop_column('applicants', 'higher_education_degree')
    op.drop_column('applicants', 'agree_to_rules')
    op.drop_column('applicants', 'local_government_origin')
    op.drop_column('applicants', 'local_government_residence')
    op.drop_column('applicants', 'ssce_certificate')
    op.drop_column('applicants', 'additional_skills')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('applicants', sa.Column('extra_skills', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('ssce_cert', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('lga_residence', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('lga_origin', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('agree_to_rules', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('degree_cert', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('applicants', sa.Column('agree_to_return_props', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.alter_column('applicants', 'design_rating', existing_type=sa.Integer(), type_=sa.VARCHAR(), existing_nullable=False)
    op.alter_column('applicants', 'do_you_smoke', existing_type=sa.Boolean(), type_=sa.VARCHAR(), existing_nullable=False)
    op.alter_column('applicants', 'date_of_birth', existing_type=sa.Date(), type_=sa.VARCHAR(), existing_nullable=False)
    op.drop_column('applicants', 'additional_skills')
    op.drop_column('applicants', 'agree_to_return_properties')
    op.drop_column('applicants', 'agree_to_abide_rules')
    op.drop_column('applicants', 'higher_education_degree')
    op.drop_column('applicants', 'ssce_certificate')
    op.drop_column('applicants', 'local_government_origin')
    op.drop_column('applicants', 'local_government_residence')
    op.drop_column('applicants', 'residential_address')
    # ### end Alembic commands ###
